// Code generated by goctl. DO NOT EDIT.
// Source: repository.proto

package server

import (
	"context"

	"cloud-disk/service/repository/rpc/internal/logic"
	"cloud-disk/service/repository/rpc/internal/svc"
	"cloud-disk/service/repository/rpc/repository"
)

type RepositoryServer struct {
	svcCtx *svc.ServiceContext
	repository.UnimplementedRepositoryServer
}

func NewRepositoryServer(svcCtx *svc.ServiceContext) *RepositoryServer {
	return &RepositoryServer{
		svcCtx: svcCtx,
	}
}

func (s *RepositoryServer) GetRepositoryPoolByRepositoryId(ctx context.Context, in *repository.RepositoryReq) (*repository.RepositoryResp, error) {
	l := logic.NewGetRepositoryPoolByRepositoryIdLogic(ctx, s.svcCtx)
	return l.GetRepositoryPoolByRepositoryId(in)
}

func (s *RepositoryServer) DeleteByIdentity(ctx context.Context, in *repository.DeleteByIdentityReq) (*repository.DeleteByIdentityResp, error) {
	l := logic.NewDeleteByIdentityLogic(ctx, s.svcCtx)
	return l.DeleteByIdentity(in)
}
